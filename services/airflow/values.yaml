namespace: airflow
serviceName: airflow
image: apache/airflow
imageTag: latest
replicas: 1
port: 8080
env:
  AIRFLOW__CORE__EXECUTOR: LocalExecutor # KubernetesExecutor
  AIRFLOW__CORE__FERNET_KEY: "VVR3ZpITpctpHjDiAVvIyLBUt_tV7Z73ejNKaj-sUAE="  # generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
  AIRFLOW__CORE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://postgres:postgres@postgres.postgres.svc.cluster.local:5432/airflow"
  AIRFLOW__WEBSERVER__SECRET_KEY: "Z629CO9qJsnECQs9fXmXkvCHpHDWoTCiaqBIpdVzTzE"
  _PIP_ADDITIONAL_REQUIREMENTS: "apache-airflow[postgres]"
  _AIRFLOW_WWW_USER_USERNAME: airflow
  _AIRFLOW_WWW_USER_PASSWORD: airflow
#  AIRFLOW__KUBERNETES__NAMESPACE: airflow
#  AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY: your-custom-image-repo
#  AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG: latest
#  AIRFLOW__KUBERNETES__DAGS_IN_IMAGE: "true"
#  AIRFLOW__KUBERNETES__DELETE_WORKER_PODS: "True"
#  AIRFLOW__KUBERNETES__WORKER_SERVICE_ACCOUNT_NAME: airflow
storage:
  enabled: true
  size: 1Gi
service:
  enabled: true
  type: ClusterIP
  port: 8080
ingress:
  enabled: true
  host: airflow.local
command: ["standalone"]
serviceAccount:
  enabled: true
